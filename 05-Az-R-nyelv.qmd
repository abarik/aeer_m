# Az R nyelv {#sec-az-r-nyelv}

```{r}
#| results: "asis"
#| echo: false
source("_common.R")
```

## Adatobjektumok üôÇ {#sec-adatobjektumok}


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
1. Gondoljuk √°t, mi lehet a k√∂vetkez≈ë algebrai kifejez√©s eredm√©nye, majd ellen≈ërizz√ºk R-ben is: $8/2(2+2)$.
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
2. Gondoljuk √°t, hogy a `.342e1` n√©v mi√©rt nem lehet √©rv√©nyes objektumn√©v? Pr√≥b√°ljuk ki a `make.names(".342e1")` parancsot, majd tanulm√°nyozzuk a `?make.names` le√≠r√°st!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
3. Magyar√°zzuk meg a `make.names(c("", "", ""))` √©s a `make.names(c("", "", ""), unique = T)` parancsok k√∂z√∂tti k√ºl√∂nbs√©get!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
4. Gondoljuk √°t, hogy egy parancs√°llom√°ny mely pontjain √©rdemes felt√©tlen√ºl megjegyz√©seket haszn√°lni!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
5. Jelent≈ësen seg√≠thetj√ºk a navig√°ci√≥t az *RStudio* parancs√°llom√°nyaiban, ha bizonyos megjegyz√©sek v√©g√©re ezt √≠rjuk: ` ----` (sz√≥k√∂z √©s n√©gy m√≠nusz jel). Hogyan haszn√°lhatjuk ezt a lehet≈ës√©get az *RStudio*-ban, √©s milyen el≈ënyei vannak?
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
6. Az *RStudio*-ban parancs√°llom√°ny (`.R`) szerkeszt√©se k√∂zben pr√≥b√°ljuk ki a {{< kbd Ctrl-Alt-R >}} billenty≈±parancsot, √©s a hozz√° kapcsol√≥d√≥ {{< kbd Shift-Alt-J >}} billenty≈±parancsot is. Mi a jelent√©se az {{< kbd Alt-L >}}, {{< kbd Shift-Alt-L >}}, {{< kbd Alt-O >}} √©s {{< kbd Shift-Alt-O >}} billenty≈±parancsoknak? A most megismert funkci√≥k hogyan v√°lthat√≥k ki *Quarto* (`.qmd`) √°llom√°ny szerkeszt√©se k√∂zben?
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
7. Vizsg√°ljuk meg ennek a h√°rom kifejez√©snek az √©rt√©k√©t: `2**3**4`, `(2**3)**4` √©s `2**(3**4)`. Mi√©rt van k√ºl√∂nbs√©g? Mi okozza a k√ºl√∂nbs√©get?
:::

## F√ºggv√©nyek üôÇ {#sec-fuggvenyek}


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
1. Tekints√ºk √°t az [-@tbl-matfuggvenyek]. t√°bl√°zat utols√≥ oszlop√°ban szerepl≈ë R f√ºggv√©nyeket. Pr√≥b√°ljuk megj√≥solni a f√ºggv√©nyek visszat√©r√©si √©rt√©k√©t. V√©gezz√ºnk ellen≈ërz√©st: g√©pelj√ºk be, √©s hajtsuk v√©gre a matematikai f√ºggv√©nyeket! Eg√©sz√≠ts√ºk ki a beg√©pelt matematikai f√ºggv√©nyeket az argumentumok nev√©vel, mindegyik argumentumnak adjunk nevet az [-@tbl-matfuggvenyek]. t√°bl√°zat els≈ë oszlopa alapj√°n! 
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
2. Az el≈ëz≈ë feladatban a matematikai f√ºggv√©nyek g√©pel√©se sor√°n milyen *RStudio* k√©nyelmi funkci√≥kat fedezt√ºnk fel. Soroljunk fel legal√°bb h√°rmat!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
3. Az aranymetsz√©s ar√°nyait tartalmaz√≥ √©p√ºletek, k√©pz≈ëm≈±v√©szeti alkot√°sok m√°ig nagy eszt√©tikai √©rt√©kkel b√≠rnak. Hat√°rozzuk meg ezt az ar√°nyt a $\phi=\frac{1+\sqrt{5}}{2}$ k√©plet seg√≠ts√©g√©vel! Egy A/4-es oldalra kb. 47 sort √≠rhatunk 12-es bet≈±m√©rettel, √©s kb. 35 sort 16-os bet≈±m√©rettel. Egy √ºres lap h√°nyadik sor√°ba √≠rn√°nk c√≠met 12-es √©s 16-os bet≈±m√©ret eset√©n, ha eszt√©tikailag harmonikusan szeretn√©nk elhelyezni? Pr√≥b√°ljuk ki mindezt egy sz√∂vegszerkeszt≈ëben is!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
4. A trigonometrikus f√ºggv√©nyek argumentum√°ban radi√°nban kell megadni a sz√∂g √©rt√©k√©t, √©s nem fokban. Ezt figyelembe v√©ve hat√°rozzuk meg a 0, 30, 45, 60, 90 √©s 180 fok szinusz√°t, koszinusz√°t √©s tangens√©t!
:::

## Adatszerkezetek üôÇ {#sec-adatszerkezetek}


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
1. Mi a hasonl√≥s√°g a k√∂vetkez≈ë h√°rom numerikus konstans k√∂z√∂tt: `0xabc`, `2748`, `.2748e4`. 
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
2. Az R √∂t el≈ëre defini√°lt konstanssal rendelkezik (`?Constants`). √çrassuk ki ezek √©rt√©keit, √°llap√≠tsuk meg t√≠pusukat!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
3. Az aranymetsz√©s ar√°nysz√°m√°t ($\phi=\frac{1+\sqrt{5}}{2}$) √≠rassuk a konzolba legal√°bb 8 tizedes pontoss√°ggal!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
4. Az `r"(tetsz≈ëleges karakterek)"` form√°j√∫ karakteres konstans megad√°snak t√∂bb v√°ltozata is l√©tezik, soroljunk fel m√©g legal√°bb √∂t lehet≈ës√©get (`?Quotes`)! Milyen el≈ëny√∂kkel rendelkezik ez a megad√°si forma az id√©z≈ëjelek √©s a ford√≠tott perjel tekintet√©ben? 
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
5. Helyezz√ºnk el id√©z≈ëjeleket karakteres konstansokban, mindh√°rom megad√°si forma mellett!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
6. Pr√≥b√°ljuk ki az [-@tbl-karfuggvenyek]. t√°bl√°zat karakterkezel≈ë f√ºggv√©nyeit! G√©pelj√ºk be az utols√≥ oszlopban l√©v≈ë p√©ld√°kat, √©s vizsg√°ljuk meg a f√ºggv√©nyek visszat√©r√©si √©rt√©k√©t.
:::



::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
7. Pr√≥b√°ljuk ki az [-@tbl-reloperatorok]. t√°bl√°zat rel√°ci√≥s oper√°torait! G√©pelj√ºk be a p√©ld√°kat √©s ellen≈ërizz√ºk az eredm√©nyeket.
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
8. A logikai oper√°torok m≈±k√∂d√©s√©r≈ël teljes k√©pet kaphatunk az [-@tbl-logoperatorok]. t√°bl√°zatb√≥l. Pr√≥b√°ljuk ki ezeket a parancsokat is!
:::

### Adatszerkezetek √°ttekint√©se


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
1. Pr√≥b√°ljuk ki az [-@tbl-adatszerkezetek]. t√°bl√°zatban szerepl≈ë p√©ld√°kat. Hozzuk l√©tre a k√ºl√∂nb√∂z≈ë t√≠pus√∫ objektumokat √©s vizsg√°ljuk meg a `typeof()` √©s `class()` f√ºggv√©nyekkel az objektumok t√≠pus√°t.
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
2. K√∂nyv√ºnkben az elemi adatt√≠pusok k√∂z√∂tt a *double*, *integer*, *karakteres* √©s *logikai* t√≠pusokat t√°rgyaljuk. Az R nyelvben azonban l√©teznek m√°s t√≠pus√∫ objektumok is. Melyek ezek?
:::

### Vektor

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
1. Hozzuk l√©tre a k√∂vetkez≈ë numerikus vektort: 12, 14, 17.
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
2. Hozzuk l√©tre a k√∂vetkez≈ë karakteres vektort: "V√°c", "Eger", "P√©cs".
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
3. Hozzuk l√©tre a k√∂vetkez≈ë logikai vektort: TRUE, FALSE, FALSE.
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
4. Hozzuk l√©tre egy sz√°mtani sorozat egym√°st k√∂vet≈ë elemeit, ahol az els≈ë elem 8, az utols√≥ 102 √©s a k√ºl√∂nbs√©g 1.
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
5. Hozzuk l√©tre egy sz√°mtani sorozat egym√°st k√∂vet≈ë elemeit, ahol az els≈ë elem 102, az utols√≥ 8 √©s a k√ºl√∂nbs√©g -1.
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
6. Hozzuk l√©tre egy sz√°mtani sorozat egym√°st k√∂vet≈ë elemeit, ahol az els≈ë elem 8, az utols√≥ 102 √©s a k√ºl√∂nbs√©g 2.
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
7. Hozzuk l√©tre egy sz√°mtani sorozat egym√°st k√∂vet≈ë elemeit, ahol az els≈ë elem 8, a k√ºl√∂nbs√©g 3 √©s a vektor 25 elem≈±.
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
8. Hozzuk l√©tre azt a numerikus vektort, amely 12 elem≈±, √©s minden elem√©nek -2 az √©rt√©ke!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
9. Hozzuk l√©tre azt a karakteres vektort, amely 7 elem≈±, √©s minden elem√©nek "P√©ntek" az √©rt√©ke!
:::



::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
10. Hozzuk l√©tre azt a logikai vektort, amely 7 elem≈±, √©s minden elem√©nek TRUE az √©rt√©ke!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
11. Hozzuk l√©tre azt a numerikus vektort, amely a 2, 3, 5 elemeket h√°romszor egym√°s ut√°n megism√©tli! H√°ny elem≈± az √≠gy l√©trej√∂tt vektor?
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
12. Hozzuk l√©tre azt a numerikus vektort, amely a 2, 3, 5 elemeket h√°romszor helyben megism√©tli! H√°ny elem≈± az √≠gy l√©trej√∂tt vektor?
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
13. Hozzuk l√©tre azt a numerikus vektort, amely a 2, 3, 5 elemeket helyben megism√©tli √∫gy, hogy a 2-≈ët 4-szer, a 3-at 5-sz√∂r √©s az 5-√∂t 7-szer ism√©tli meg! H√°ny elem≈± az √≠gy l√©trej√∂tt vektor?
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
14. Szab√°lyos vektorok l√©trehoz√°s√°nak van egy kor√°bban m√©g nem eml√≠tett m√≥dja: a `sequence()` f√ºggv√©ny. Ismerj√ºk meg a s√∫g√≥b√≥l ezt a f√ºggv√©nyt, √©s √©rtelmezz√ºk a `sequence(4)` √©s `sequence(c(4,5))` f√ºggv√©nyh√≠v√°sokat!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
15. Vektorok l√©trehoz√°s√°nak sz√°mos m√≥dj√°t megismert√ºk ebben a fejezetben, de elemek megad√°sa n√©lk√ºl, vagy ak√°r nulla hossz√∫s√°ggal is l√©trehozhatunk vektort. A `double()`, `integer()`, `character()` √©s `logical()` f√ºggv√©nyek k√∂zvetlen√ºl az adott t√≠pusnak megfelel≈ë vektort hozz√°k l√©tre. A s√∫g√≥ tanulm√°nyoz√°s√°val √°ll√≠tsunk el≈ë 0 √©s 10 elem≈± vektor objektumokat mind a n√©gy t√≠pus eset√©n.
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
16. Pr√≥b√°ljuk ki az [-@tbl-statfuggvenyek]. t√°bl√°zatban szerepl≈ë p√©ld√°kat.
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
17. Hozzuk l√©tre a `'Peti'=5, 'Bori'=NA, '√âva'=3, 'P√°l'=NA, 'Gerg≈ë'=5, 'Ili'=4` adatokat tartalmaz√≥ vektort, majd rendezz√ºk, indexelj√ºk az els≈ë √©s az utols√≥ elem√©t, v√°logassuk le az 5-√∂s √©rt√©keket, cs√∂kkents√ºk mindegyik √©rt√©ket 1-gyel, csak az 5-√∂ket cs√∂kkents√ºk 1-gyel.
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
18. A fejezetben ismertetett `seq_along()` f√ºggv√©ny mellett az `seq_len()` f√ºggv√©ny is l√©tezik, amely a megadott sz√°m√∫ elemet tartalmaz√≥ vektort hoz l√©tre. Milyen esetekben c√©lszer≈± az `seq_len()` f√ºggv√©nyt haszn√°lni? 
:::

### M√°trix


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
1. Hozzunk l√©tre egy csupa 1-b≈ël √°ll√≥ m√°trixot, amelynek 3 sora √©s 2 oszlopa van!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
2. Hozzunk l√©tre egy 3 $\times$ 4-es karakteres m√°trixot, amely 12 k√ºl√∂nb√∂z≈ë keresztnevet tartalmaz!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
3. Hozzunk l√©tre egy 3 $\times$ 4-es logikai m√°trixot, amelynek 1. √©s 3. sora `TURE` a 2. sora pedig `FALSE` √©rt√©keket tartalmaz!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
4. M√°trixok indexel√©s√©re olyan speci√°lis indexm√°trix is haszn√°lhat√≥, amelynek k√©t oszlopa van, √©s az el√©rend≈ë elemek sor- √©s oszlopkoordin√°t√°it tartalmazza. Mutassunk p√©ld√°t erre a `m√°trix[indexm√°trix]` alak√∫ m√°trixindexel√©sre!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
5. A fejezetben megismert `apply()` mellett nagyon n√©pszer≈± az `sapply()` √©s a `vapply()` f√ºggv√©ny is, amelyek a m√°trixokkal is haszn√°lhat√≥ak. Ismerj√ºk meg ezeket a f√ºggv√©nyeket a s√∫g√≥jukb√≥l, √©s pr√≥b√°ljuk ki ≈ëket!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
6. Mit jelent egy m√°trix transzpon√°l√°sa? Hogyan tudjuk ezt megtenni R-ben?
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
7. Hozzunk l√©tre egy $3\times3$-as egys√©gm√°trixot! Keress√ºnk r√° a `diag()` f√ºggv√©nyre, √©s n√©zz√ºk meg, hogy mit csin√°l! Keress√ºnk r√° a m√°trixokkal kapcsolatos szok√°sos m≈±veletekre is! Hozzunk l√©tre egy $3\times3$-as v√©letlen m√°trixot! 
:::

### Faktor


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
1. Hozzuk l√©tre azt a karakteres vektort, amely a "f√©rfi", "n≈ë" karakteres konstansokat, √∫gy helyezi el egym√°s mellett, hogy a 7 darab f√©rfi √©rt√©k ut√°n 13 db n≈ë c√≠mke k√∂vetkezik! H√°ny elem≈± az √≠gy l√©trej√∂tt vektor?
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
2. Egy vizsg√°latban az els≈ë 10 szem√©ly neme "f√©rfi", a t√∂bbi 8 neme "n≈ë" volt. Hozzuk l√©tre azt a faktort, amely le√≠rja a neme v√°ltoz√≥t!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
3. Egy vizsg√°latban v√°rosi ("V") √©s falusi ("F") fiatalok vettek r√©szt! A megk√©rdezettek telep√ºl√©st√≠pusa rendre a k√∂vetkez≈ë volt: F, F, V, F, V, V, V, F. Hozzuk l√©tre azt a faktort, amely le√≠rja a telep√ºl√©st√≠pus v√°ltoz√≥t!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
4. Egy vizsg√°latban a doh√°nyz√°si szok√°st egy k√©t√©rt√©k≈± sk√°l√°n m√©rt√©k: 0-nem doh√°nyzik; 1-doh√°nyzik. A megk√©rdezettek doh√°nyz√°si szok√°sa a k√∂vetkez≈ë volt: 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0. Hozzuk l√©tre azt a faktort, amely le√≠rja a doh√°nyz√°si szok√°s v√°ltoz√≥t!
:::

### Lista {#sec-listadefalf}

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
1. Hozzunk l√©tre egy h√°romelem≈± list√°t a TRUE, 12, √©s "Verseny" konstansokb√≥l!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
2. Hozzunk l√©tre egy h√°romelem≈± list√°t a TRUE, 12, √©s "Verseny" konstansokb√≥l, de gondoskodjunk az egyes elemek elnevez√©s√©r≈ël, amelyek legyenek rendre: "befejezve", "indulok" √©s "leiras"!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
3. Hozzunk l√©tre egy h√°romelem≈± list√°t a TRUE, 12 √©s "Verseny" konstansokb√≥l, valamint az indul√≥ versenyz≈ëk v√©gs≈ë pontsz√°maib√≥l, amelyek rendre: 89, 78, 23, 67, 99, 69, 85, 77, 58, 72, 48, 81. Gondoskodjunk az egyes elemek elnevez√©s√©r≈ël, amelyek legyenek rendre: "befejezve", "indulok", "leiras" √©s "pontszam"!
:::

### Adatt√°bla {#sec-adattabla-alapok}


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
1. Hozzunk l√©tre egy 30 $\times$ 3-as adatt√°bl√°t, `csoport`, `matematika` √©s `magyar` oszlopnevekkel. A `csoport` v√°ltoz√≥ legyen egy `5.a`, `5.b` √©s `5.c` c√≠mk√©ket tetsz≈ëleges sorrendben tartalmaz√≥ faktor, a `matematika` √©s a `magyar` pedig 1-5 oszt√°lyzatokat tartalmaz√≥ numerikus vektor.
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
2. √çrassuk ki a `{MASS}` csomag `survey` adatt√°bl√°j√°nak 3. sor√°ban az 5. oszlopban l√©v≈ë √©rt√©ket!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
3. √çrassuk ki a `{MASS}` csomag `survey` adatt√°bl√°j√°nak 3. √©s 6. sor√°ban az 5. oszlopban l√©v≈ë √©rt√©keket! Az adatt√°bla t√≠pus maradjon meg!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
4. √çrassuk ki a `{MASS}` csomag `survey` adatt√°bl√°j√°nak 3. √©s 6. sor√°b√≥l az √∂sszes adat√©rt√©ket!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
5. √çrassuk ki a `{MASS}` csomag `survey` adatt√°bla `Pulse` oszlop√°t h√°romf√©le m√≥dszerrel! 
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
6. √çrassuk ki a `{MASS}` csomag `survey` adatt√°bla `Pulse` v√°ltoz√≥j√°nak els≈ë 3 elem√©t h√°romf√©le m√≥dszerrel!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
7. A `{HSAUR3}` csomag `Forbes2000` adatt√°bl√°ja 2000 v√°llalat adat√°t tartalmazza! Hat√°rozzuk meg a magyar c√©gek nev√©t √©s helyez√©s√©t (`country` oszlop alapj√°n)! √çrassuk ki a k√©perny≈ëre a 10 legnagyobb piaci √©rt√©kkel (`marketvalue` oszlop) rendelkez≈ë c√©g nev√©t √©s piaci √©rt√©k√©t! Hat√°rozzuk meg a legkisebb profittal (`profits` oszlop) rendelkez≈ë 5 c√©g minden adat√°t! Hat√°rozzuk meg a legnagyobb profittal (`profits` oszlop) rendelkez≈ë 10 amerikai vagy jap√°n c√©g nev√©t, orsz√°g√°t √©s profitj√°t!  
:::

## Tov√°bbi adatszerkezetek ü§î {#sec-tovabbi-adatszerkezetek}


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
1. Egy 30 f≈ës oszt√°lyban a 13 fi√∫b√≥l 5 tanul√≥ vett r√©szt k√∂zleked√©si versenyen, m√≠g a l√°nyok k√∂z√ºl 8-an. Hozzuk l√©tre e "nem" √©s "verseny" v√°ltoz√≥k kapcsolat√°t le√≠r√≥ m√°trixot, t√°bl√°zatot √©s adatt√°bl√°t is.
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
2. Konvert√°ljuk d√°tumm√° a k√∂vetkez≈ë k√©t sztringet: `"6November2020"`, `"2013-02-29"`! Ut√≥bbi esetben mi lehet a hiba oka?
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
3. A `seq()` f√ºggv√©ny `from=` √©s `to=` argumentuma a d√°tum t√≠pus√∫ objektumokkal is m≈±k√∂dik. A `by=` argumentum √©rt√©ke ilyenkor lehet numerikus (ekkor napokat jelent), de lehet `x weeks`, `x months` vagy `x years`, ahol `x` null√°n√°l nagyobb eg√©sz lehet. Hozzunk l√©tre egy d√°tum-vektort 2020 √∂sszes h√©tf≈ëj√©nek d√°tum√°val! 
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
4. A Halley-√ºst√∂k√∂s utolj√°ra 1986-ban j√°rt a Naprendszer√ºnkben, √≠gy az el≈ërejelz√©sek szerint legk√∂zelebb 2061. j√∫lius 26-ban t√©r vissza. R√∂gz√≠ts√ºk ezt d√°tumk√©nt, √©s sz√°moljuk ki, h√°ny napot kell m√©g v√°rni az √ºst√∂k√∂s √©rkez√©s√©re.
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
5. Az `iris` adatb√°zishoz hasonl√≥an a `penguins` nev≈± adatt√°bla egy k√∂nnyen kezelhet≈ë, tanul√°sra sz√°nt √∫j adatb√°zis az *Alap R*-ben, amely k√ºl√∂nb√∂z≈ë pingvinfajok morfol√≥giai adatait tartalmazza. Haszn√°ljuk a `penguins` adatb√°zist a *Tidyverse R* f√ºggv√©nyeivel √©s a pipe (`|>`) oper√°torral! A p√©ld√°k legyenek egyszer≈±, j√≥l √©rtelmezhet≈ë m≈±veletek. A c√©l a gyakorl√°s, nem a statisztikai m√©lys√©g!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
6. √çrassuk ki a munkater√ºlet objektumait!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
7. Hozzunk l√©tre egy `pulzus` nev≈± objektumot √©s √∫jra √≠rassuk ki a munkater√ºlet objektumneveit!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
8. T√°vol√≠tsuk el a `pulzus` objektumot a munkater√ºletr≈ël!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
9. Hat√°rozzuk meg az aktu√°lis munkak√∂nyvt√°rat!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
10. N√∂velj√ºk meg a bet≈±k m√©ret√©t az *RGui*, az *R Commander* √©s az *RStudio* alkalmaz√°sokban is!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
11. Vizsg√°ljuk meg, hogy a sz√°m√≠t√≥g√©p√ºnk√∂n van-e telep√≠tve a `{DescTools}` csomag, ha nincs telep√≠ts√ºk! Der√≠ts√ºk ki, hogy a `{DescTools}` csomagnak mi a c√©lja? Soroljunk fel h√°rom f√ºggv√©nyt √©s adatt√°bl√°t ebb≈ël a csomagb√≥l! T√°vol√≠tsuk el a mem√≥ri√°b√≥l a `{DescTools}` csomagot!
:::


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
12. Telep√≠ts√ºk a sz√°m√≠t√≥g√©p√ºnkre a k√∂vetkez≈ë csomagokat: `{HSAUR3}`, `{psych}`, `{prettyR}`, `{descr}` √©s `{pastecs}`!
:::

## Halad√≥ nyelvi elemek ü§Ø {#sec-halado-nyelvi-elemek}


::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
1. Milyen szakk√∂nyvekb≈ël tudn√°nk m√©g jobban megismerni az R nyelv objektum-orient√°lt programoz√°si lehet≈ës√©geit?
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
2. Mutassunk p√©ld√°t arra, hogy a `class` attrib√∫tum hib√°s m√≥dos√≠t√°s√°val, hogyan tudunk k√°rt okozni faktor √©s adatt√°bla adatszerkezetek eset√©n!
:::

::: {.callout-warning icon="false"}
## `r emoji("dart")` Feladat
3. Hozzunk l√©tre egy `osszeg` nev≈± oszt√°lyt numerikus vektorokhoz, amely a `print()` f√ºggv√©ny h√≠v√°sakor el≈ësz√∂r ki√≠rja az elemek √∂sszeg√©t, majd a szok√°sos m√≥don megjelen√≠ti az objektum √©rt√©k√©t is. Tesztelj√ºk az √∫j oszt√°lyt!
:::

